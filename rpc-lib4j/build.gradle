plugins {
    id "com.github.johnrengelman.shadow" version "5.1.0"
    id 'java'
}
version= "1.0-${getCommitHash()}"
shadowJar{
    minimize()
}

group 'org.aion.rpc'
sourceCompatibility = 1.10

repositories {
    mavenCentral()
}

test {
    useJUnitPlatform()
}

compileJava {
    doFirst {
        options.compilerArgs = [
                '--module-path', classpath.asPath,
        ]
        classpath = files()
    }
}

javadoc{
    doFirst{
        options.addStringOption("-module-path", classpath.asPath)
    }
}

def workingDir = rootDir.absolutePath
def generatedFolderPath = "${workingDir}/out/"
def javaLibraryPath = "${workingDir}/rpc-lib4j/src/main/java/org/aion/rpc"
def javaGeneratedTestsPath = "${workingDir}/rpc-lib4j/tests"
def buildRoot = "${rootDir.absolutePath}/build"

task copyJavaExceptions(type: Copy){
    from "${generatedFolderPath}/errors"
    into "${javaLibraryPath}/errors"
    include "*.java"
    outputs.upToDateWhen{ false }
}

task copyJavaClientMethods(type:Copy){
    from "${generatedFolderPath}/rpc/RPCClientMethods.java"
    into "${javaLibraryPath}/client"
    outputs.upToDateWhen{ false }
}

task copyJavaServerMethods(type:Copy){
    from "${generatedFolderPath}/rpc/RPCServerMethods.java"
    into "${javaLibraryPath}/server"
    outputs.upToDateWhen{ false }
}

task copyJavaTypes(type:Copy){
    from "${generatedFolderPath}/types"
    into "${javaLibraryPath}/types"
    include "*.java"
    outputs.upToDateWhen{ false }
}

task copyJavaTests(type:Copy){
    from "${generatedFolderPath}/rpc"
    into "${javaGeneratedTestsPath}"
    include "*Test*.java"
    outputs.upToDateWhen{ false }
}

task copyJavaConstants(type:Copy){
    from "${generatedFolderPath}/rpc"
    into "${javaLibraryPath}/constants"
    include "Method.java"
    outputs.upToDateWhen{ false }
}

task copyAllGeneratedJava(type:Copy){
    dependsOn  'copyJavaExceptions', 'copyJavaClientMethods', 'copyJavaServerMethods', 'copyJavaTypes', 'copyJavaTests', 'copyJavaConstants'
}

task docs4J(type: Zip){
    dependsOn ':rpc-lib4j:javadoc'
    def rpcPath ="$buildRoot/rpc-lib4j/docs"
    archiveFileName = "rpc-docs.zip"
    destinationDirectory = file("$rpcPath")
    from "$rpcPath/javadoc"
}

task packageGeneratedFiles4J(){
    dependsOn 'copyAllGeneratedJava'
    dependsOn ':rpc-lib4j:build', ':rpc-lib4j:shadowJar'
    dependsOn 'docs4J'
    doFirst{
        println("Compiling jars")
    }
}

dependencies {
    compile files("lib/util4j-cc9c754dd.jar")
    compile files("lib/aion-types-22a3be9.jar")
    implementation group: 'org.json', name: 'json', version: '20180130'
    implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.10'
    implementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
    testImplementation('org.junit.jupiter:junit-jupiter:5.5.2')
    testImplementation("org.junit.jupiter:junit-jupiter-params:5.4.2")
    testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine:5.4.2')
}

